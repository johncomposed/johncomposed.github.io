{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    p: \"p\"\n  }, _provideComponents(), props.components), {Grid, Cell} = _components;\n  if (!Cell) _missingMdxReference(\"Cell\", true);\n  if (!Grid) _missingMdxReference(\"Grid\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Grid, {\n      columns: \"2\",\n      children: [_jsx(Cell, {\n        style: {\n          gridRow: 'span 2'\n        },\n        children: _jsx(_components.img, {\n          src: \"/images/tdj-invoice-result.png\",\n          alt: \"Hours result\",\n          width: \"1444\",\n          height: \"2100\"\n        })\n      }), _jsx(Cell, {\n        children: _jsx(_components.img, {\n          src: \"/images/tdj-invoice-print.png\",\n          alt: \"Printing Invoice\",\n          width: \"2400\",\n          height: \"1904\"\n        })\n      }), _jsx(Cell, {\n        children: _jsx(_components.img, {\n          src: \"/images/tdj-invoice-api.png\",\n          alt: \"Hours importing\",\n          width: \"842\",\n          height: \"292\"\n        })\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Features:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Content-editable pages\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Accepted toggl time reports in the form of json/yaml files\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Hooked into the toggl api itself to pull months\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Monthly rollups\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Optionally separating by individuals\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Automatically separating clients\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"History\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When I began my consultancy in 2016, I wasn't satisfied with any existing tools for creating invoices. They were either too clunky or created invoices that I felt weren't professional enough for the enterprise clients we served. Since we were using toggl tracker internally, I created a quick react app that took in their exported reports and transformed them into a content-editable web page that could then be served up via print css. Over the years, I made several versioned iterations onto it while keeping backwards compatibility (ensuring reproducable invoices).\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"TinyDJ's invoice makers"}},"sources":{"description":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_components.p, {\n    children: [\"Professional looking invoices using \", _jsx(_components.a, {\n      href: \"https://toggl.com/\",\n      children: \"toggl\"\n    }), \" time-tracker reports.\"]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"TinyDJ's invoice makers"}}},"data":{"title":"TinyDJ's invoice makers"},"slug":"projects/tdj-invoice"},"__N_SSG":true}